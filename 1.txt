eventFilter (2098~2337줄):
마우스 이동, 버튼 클릭, 창 상태 변경, 리사이징, 드래그 등 다양한 이벤트 처리
show_image (1129~1257줄):
이미지 로딩, 비디오 정지, UI 업데이트, 파일 타입 확인, 타입별 처리 분기
toggle_fullscreen (2338~2433줄):
전체화면 모드 전환, UI 상태 관리, 비디오 상태 처리
delayed_resize (944~995줄):
미디어 타입별 리사이징 로직(이미지, GIF, WEBP, 비디오)
rotate_image (3059~3145줄):
미디어 타입별 회전 처리 로직
keyPressEvent (2023~2070줄):
다양한 키 이벤트 처리를 한 함수에서 처리
resizeEvent (839~943줄):
창 크기 조정 시 UI 요소, 오버레이, 메시지 레이블 등 다양한 요소 조정
__init__ (65~754줄):
지나치게 긴 초기화 함수로 UI 생성, 이벤트 연결, 변수 초기화 등 여러 책임
setup_custom_ui (2816~2862줄):
버튼 크기 설정, 스타일 적용, 이벤트 연결 등 여러 UI 관련 로직
update_button_sizes (3146~3229줄):
폴더 버튼, 슬라이더 컨트롤 등 다양한 UI 요소 크기 조정
show_gif (1258~1419줄):
애니메이션 로딩, 회전 처리, 슬라이더 설정, 타이머 관리 등
show_webp (1420~1598줄):
WEBP 애니메이션/이미지 로딩, 회전 처리, 슬라이더 설정, 타이머 관리
closeEvent (2466~2526줄):
비디오 정지, 스레드 종료, 캐시 정리, 책갈피 저장 등 여러 리소스 정리
on_image_loaded (2958~3034줄):
이미지 캐싱, 회전 처리, 스케일링, UI 업데이트 등
delete_current_image (755~833줄):
파일 존재 확인, 확인 대화상자 표시, 휴지통으로 이동, 북마크 제거, 인덱스 조정 등
update_bookmark_button_state (2602~2638줄):
북마크 상태 확인 및 버튼 스타일 설정
wheelEvent (2071~2097줄):
미디어 타입에 따른 쿨다운 계산 및 이미지 전환

현재 애니메이션 핸들러 모듈화 진행 상황:
✅ 완료된 부분:
animation_handler.py 클래스 구조 생성
load_gif 메서드 구현 (GIF 애니메이션 처리)
load_webp 메서드 구현 (WEBP 애니메이션 처리)
scale_animation 메서드 구현 (애니메이션 크기 조절)
seek_to_frame, toggle_playback 메서드 구현 (재생 제어)
회전 처리 적용 (transform 및 frameChanged 이벤트 연결)
🔄 진행 중인 부분:
📝 남은 부분:
main.py에서 기존 애니메이션 처리 코드 완전 제거
모든 기존 애니메이션 처리를 새 모듈로 이전
전반적인 코드 최적화 및 주석 보완

main.py에서 남아있는 show_gif 및 show_webp 메서드를 찾아서 제거
이 메서드들이 호출되는 모든 위치를 AnimationHandler 사용으로 변경
main.py에서 GIF/WEBP 관련 속성 및 변수들을 AnimationHandler로 이전
먼저 main.py에서 show_gif와 show_webp 메서드를 찾아보겠습니다: