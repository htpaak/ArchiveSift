main.py에서 단일 책임 원칙(SRP)을 위반하는 메서드들은 다음과 같습니다:
show_image(image_path):
책임 혼합: 미디어 타입 감지, UI 업데이트, 로딩, 리소스 정리 모두 처리
너무 많은 분기: 각 미디어 타입에 따른 처리 로직이 한 메서드에 집중
개선 방향: FormatDetector로 감지만 하고 각 핸들러에 위임해야 함
keyPressEvent(event):
책임 혼합: 키보드 이벤트 감지와 각종 기능 실행 로직을 모두 처리
너무 긴 조건문: 다양한 키 조합에 대한 처리가 한 메서드에 집중됨
개선 방향: KeyboardHandler로 완전히 위임 필요
on_image_loaded(path, image, size_mb):
책임 혼합: 이미지 로딩 콜백, 캐싱, 변환, 표시, 스레드 관리를 모두 처리
핵심 로직과 UI 처리 혼합: 로딩과 표시 로직이 분리되지 않음
개선 방향: 로딩, 캐싱, 표시 로직을 각각 분리
cleanup_current_media():
책임 혼합: 여러 종류의 미디어(비디오, 애니메이션 등) 리소스 관리
개선 방향: 각 핸들러가 자신의 리소스 정리를 담당하도록 분리
update_ui_for_media(image_path):
책임 혼합: 파일 이름 표시, 북마크 상태 업데이트, 음소거 버튼 상태 등
개선 방향: UI 컴포넌트가 자신의 상태 업데이트를 담당하도록 분리
show_next_image() / show_previous_image():
책임 혼합: 파일 탐색, 인덱스 관리, 이미지 표시 모두 처리
개선 방향: FileNavigator에 완전히 위임하고 결과만 처리
cancel_pending_loaders(current_path):
책임 혼합: 스레드 관리와 로딩 상태 처리를 동시에 담당
개선 방향: ImageLoader 클래스가 관리하도록 분리
init_():
책임 혼합: 모든 UI 요소 초기화, 리소스 설정, 이벤트 연결 등
너무 긴 초기화: 200줄 이상의 코드로 가독성 저하
개선 방향: 모듈별 초기화 메서드로 분리
disconnect_all_slider_signals():
책임 혼합: 슬라이더 신호 관리와 예외 처리를 모두 담당
개선 방향: 슬라이더 컴포넌트가 자신의 신호 연결/해제를 관리하도록 분리
toggle_fullscreen():
책임 혼합: 전체화면 모드 전환과 UI 상태 관리를 동시에 처리
개선 방향: WindowHandler에 위임하고 UI 상태 관리는 분리
toggle_animation_playback():
책임 혼합: 애니메이션 재생 상태 전환과 UI 업데이트를 함께 처리
개선 방향: AnimationHandler가 재생 관리하고 UI 업데이트는 별도 처리
rotate_image(clockwise):
책임 혼합: 회전 로직과 UI 업데이트를 함께 처리
개선 방향: RotationManager가 완전히 관리하도록 분리
delete_current_image():
책임 혼합: 파일 삭제와 UI 업데이트, 다음 이미지 표시를 모두 처리
개선 방향: FileOperations에 위임하고 결과만 처리

fix: - 버그 수정
feat: - 새로운 기능 추가
refactor: - 코드 리팩토링 (기능 변경 없이 코드 개선)
perf: - 성능 개선
docs: - 문서 수정
style: - 코드 포맷팅, 세미콜론 추가 등 (코드 변경 없음)
test: - 테스트 추가 또는 수정
chore: - 빌드 프로세스, 라이브러리 업데이트 등
build: - 빌드 시스템 또는 외부 종속성 관련 변경
ci: - CI 구성 파일 및 스크립트 변경
revert: - 이전 커밋으로 되돌리기
mod: - 코드 수정 (일반적인 변경)
add: - 코드, 파일, 테스트 등 추가
remove: - 코드, 파일 제거
move: - 코드, 파일 이동
rename: - 파일명 변경
improve: - 기존 기능 개선
impl: - 기능 구현(implementation)
update: - 코드 업데이트